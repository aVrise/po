#!/bin/bash

  ########################################################################
  ########################################################################
  ##                                                                    ##
  ##                                                                    ##
  ##  made by aVrise, at 07/07/2015                                     ##
  ##  have a good time                                                  ##
  ##                                                                    ##
  ##                                                                    ##
  ##                                                                    ##
  ##                                                                    ##
  ##                                                                    ##
  ##                                                                    ##
  ########################################################################
  ########################################################################
                                #         #
                                #         #
                                #         #
  ########################################################################
  #                                                                      #
  #                                                           ###        #
  #                                                           #          #
  #                                                                      #
  ########################################################################


#set default

potDir=`grep -m 1 PBE2010 ~/res/potDir `
vaspScript="qsub.sh"


#initializtion

execFlag=1
DATE=`date +-%Y-%m-%d-%H%M`
fixLimit=-99                            # a relative infinitesimal var
if [ -f OUTCARã€€] ;then                 #get number of ions from OUTCAR
  atom_num=$(sed -n "s/[^\n]*NIONS = *//p" OUTCAR)
  atom_num_plus_1=$(($atom_num+1))
  atom_num_plus_2=$(($atom_num+2))
  atom_num_minus_1=$(($atom_num-1))
  atom_num_minus_2=$(($atom_num-2))
fi


#take arguments

while getopts :hIjrxc:f:i:p:u: flags
do
  case $flags in

    c)dirName=$OPTARG;execFlag=21;;
    h)execFlag=99;;
    I)execFlag=22;;
    j)execFlag=23;;
    r)execFlag=24;;
    p)potDir=`grep -m 1 $OPTARG ~/res/potDir`;;
    f)fixLimit=$OPTARG;;
    i)execFlag=0
      case $OPTARG in
        [Dd][Oo][Ss]*)echo "take a calculation of DOS";execFlag=2;;
        [Ss][Tt][Mm]*)echo "take a calculation of STM";execFlag=3;;
        [Ss][Cc]*)echo "take a static calculation ";execFlag=4;;
        [Nn][Ss][Tt][Mm]*)echo "take a pre-bSKAN calculation";execFlag=5;;
        [Bb][Ss][Kk][Aa][Nn]*)echo "take a bSKAN calcuation";execFlag=6;;
      esac;;
    x)execFlag=11;;
    u)ldapuFlag=1
      ldapuvalue=$OPTARG;;
    ?)execFlag=0
      printf "\033[33m there is sth wrong with your command!\033[0m\n"
      echo " po -h for more help";;

  esac
done


################################################################################################################


case $execFlag in


  #0 for non-vaspfiles operation
  0)echo "no operation has been execuated"
    ;;


  #1 for generate vasp input files
  1)
    if [ -f *.cif ] ;then
      dos2unix *.cif
      JOB_NAME=`sed -n '1s/data_\(\S*\)/\1/p' *.cif`
    else
      echo ".cif files don't exist!!!"
      exit
    fi

    #generate POSCAR from .cif file
    echo $JOB_NAME > POSCAR
    sed -n '10,15p' *.cif|awk '{printf " %s", $2}'|awk '{pie=3.1415926/180; printf "%.6f\n%12.6f%12.6f%12.6f\n%12.6f%12.6f%12.6f\n%12.6f%12.6f%12.6f\n",1,$1,0,0,$2*cos(pie*$6),$2*sin(pie*$6),0,$3*cos(pie*$5),$3*(cos(pie*$4)-cos(pie*$6)*cos(pie*$5))/sin(pie*$6), $3*sqrt((cos(pie*$5-pie*$6)-cos(pie*$4))*(cos(pie*$4)-cos(pie*$5+pie*$6))/sin(pie*$6)^2)}' >> POSCAR
    grep Uiso *.cif|awk '{printf "%s\n",$2}'|sort|uniq -c|awk '{printf "%6s",$2}' >> POSCAR
    echo >> POSCAR
    grep Uiso *.cif|awk '{printf "%s\n",$2}'|sort|uniq -c|awk '{printf "%6s",$1}' >> POSCAR
    printf "\nSelective\nDirect\n" >> POSCAR
    for i in `grep Uiso *.cif|awk '{printf "%s\n",$2}'|sort -u` ;do
     grep Uiso *.cif|grep -w $i|sort -nk 5|awk '{ if($5>"'"$fixLimit"'") printf "%12.8s%12.8s%12.8s   T   T   T\n", $3,$4,$5 ;else printf "%12.8s%12.8s%12.8s   F   F   F\n",$3,$4,$5}' >> POSCAR
    done
    head -7 POSCAR
    if [ $ldapuFlag ] ;then #LDA+U
      echo $ldapuvalue | awk -F '*' '{b[$1]=b[$2]=b[$3]=b[$4]=b[$5]=b[$6]=b[$7]=b[$8]=b[$9]=b[$10]=0.5;b[0]=0;b[$20]=" ";printf "%6s%6s%6s%6s%6s%6s%6s%6s%6s%6s LDA+U\n",$1-b[$1],$2-b[$2],$3-b[$3],$4-b[$4],$5-b[$5],$6-b[$6],$7-b[$7],$8-b[$8],$9-b[$9],$10-b[$10]}'
    fi

    #generate POTCAR from POSCAR
    rm -f POTCAR
    for i in `sed -n '6p' POSCAR` ;do
      cat $potDir/$i/POTCAR >> POTCAR
    done
    grep HF POTCAR
    #
    cp ~/res/KPOINTS KPOINTS
    sed "s/JOB_NAME/$JOB_NAME/" ~/res/incar > INCAR
    if [ $ldapuFlag ] ;then #LDA+U
      echo $ldapuvalue | awk -F '*' '{a[$1]=a[$2]=a[$3]=a[$4]=a[$5]=a[$6]=a[$7]=a[$8]=a[$9]=a[$10]=2;b[$1]=b[$2]=b[$3]=b[$4]=b[$5]=b[$6]=b[$7]=b[$8]=b[$9]=b[$10]=0.5;b[0]=0;a[0]=-1;b[$20]=a[$20]=" ";printf "\nLDAU=.TRUE.\nLDAUTYPE=2\nLDAUL=%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s\nLDAUU=%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s\nLDAUJ=%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s\n",a[$1],a[$2],a[$3],a[$4],a[$5],a[$6],a[$7],a[$8],a[$9],a[$10],$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,b[$1],b[$2],b[$3],b[$4],b[$5],b[$6],b[$7],b[$8],b[$9],b[$10]}' >> INCAR
    fi
    sed "s/JOB_NAME/$JOB_NAME/" ~/res/$vaspScript > zlauncher
    printf "\033[31mDON'T FORGET \033[34mINCAR, KPOINTS, CORES\033[0m\n"
    ;;

  #2 for create dos directory
  2)if [ -d "dos" ] ;then
      mv dos dos.backup$DATE
    fi
    mkdir dos
    cp * dos/
    sed -i "s/ISTART[^\n]*/ISTART=1/  " dos/INCAR
    printf "\nICHARG=11\nLORBIT=10\n#EMIN=-10\n#EMAX=9\n#NBANDS=522\nNEDOS=2000\n\n" >> dos/INCAR
    ;;


  #3 for create stm directory
  3)if [ -d "stm" ] ;then
      mv stm stm.backup$DATE
    fi
    mkdir stm
    cp * stm/
    sed -i " s/ISTART[^\n]*/ISTART=1/ "  stm/INCAR
    printf "\nLPARD=.TRUE.\nNBMOD=-3;EINT=-0.1\nLSEPB=.FALSE.;LSEPK=.FALSE\n\n" >> stm/INCAR
    ;;


  #4 for create static calculation directory
  4)if [ -d "sc" ] ;then
      mv sc sc.backup$DATE
    fi
    mkdir sc
    cp * sc/
    cp CONTCAR sc/POSCAR
    sed -i " s/NSW/#NSW/ ; s/ISIF/#ISIF/ ; s/IBRION/#IBRION/ ; s/POTIM/#POTIM/ ; s/LCHARG/#LCHARG/ ; s/LWAVE/#LWAVE/" sc/INCAR
    echo >> sc/INCAR
    ;;

  #5 for bSKAN input files calculation
  5)if [ -d "stm_bskan" ] ;then
      mv stm_bskan stm_bskan.backup$DATE
    fi
    mkdir stm_bskan
    cp * stm_bskan/
    z_axis=`sed -n "4p" POSCAR | awk '{print $3}'`
    stm1=$(echo "$(grep -A$atom_num_plus_1 POSITION OUTCAR | tail -$atom_num | awk '{print $3}' | sort -n | tail -1) + 0.5" | bc )
    stm2=$(echo "$stm1 + 5.2918" | bc)
    stm3=0.059218
    stm4=-50
    stm5=2
    stm6=2
    echo "STM=$stm1 $stm2 $stm3 $stm4 $stm5 $stm6" >> stm_bskan/INCAR
    ;;

  #6 for bSKAN calcultion
  6)

  #11 for generate .xyz from OUT.ANI
  11)file_name=`basename $PWD`
     atom_nums=`head -1 OUT.ANI|sed 's/ *//g'`
     tail_nums=`expr $atom_nums + 2`
     tail -$tail_nums OUT.ANI|sed '2s/[^~]*//' > $file_name.xyz
     ;;


  #21 for check jobs based on names of directory, only for $HOME/LOG existing
  21)grep $dirName $HOME/LOG |tail
     ;;


  #22 for initialize the incar file
  22)if [ -d $HOME/res ] ;then
       if [ -f $HOME/res/incar ] ;then
          rm -r $HOME/res/incar
       fi
     else
       cd $HOME
       mkdir res
     fi
     printf "SYSTEM=JOB_NAME\nISPIN=2\nISIF=2\n\nLCHARG=.FALSE. # for .TRUE.\nLWAVE=.FALSE. # for .TRUE.\n#LVDW=.TRUE.\nLREAL=A\nENCUT=400\n\nISTART=0\nIBRION=2\nPOTIM=0.4\nNSW=1000\n#PREC=Accurate\nALGO=Fast\nEDIFFG=-0.05\nISMEAR=0 ; SIGMA=0.05 #-5 for accurate total energy and DOS, 0 for large cell, 1 for metal\nVOSKOWN=0 #0 for PBE, 1 for PW91\nNELM=100\nNSIM=4\nISYM=0\n\nNPAR=4\n#MAGMOM\n\n" > $HOME/res/incar
     ;;


  #23 for submit jobs. type your submit jobs commands replacing "sh zlauncher"
  23)for i in $(ls -p|grep "/"|grep -v backup)
       do cd $i
       if [ -f zlauncher ] ;then
         sh zlauncher
       else
         echo "there isn't the zlauncher in $PWD "
       fi
       cd ..
     done
     ;;


  #24 for remove useless files
  24)rm -f CHG CHGCAR DOSCAR EIGENVAL IBZKPT energy  PCDAT vasprun.xml WAVECAR XDATCAR mpd.hosts errfile outfile REPORT fort.66
     ;;



  #99 for manual
  99) cat <<EOF





                     MMMMM           MMMMM              AAAAA     NNNN          NN     UU             UU              AAAAA     LL
                    MM  MM          MM  MM             AA  AA     NN NN         NN     UU             UU             AA  AA     LL
                   MM   MM         MM   MM            AA   AA     NN  NN        NN     UU             UU            AA   AA     LL
                  MM    MM        MM    MM           AA    AA     NN   NN       NN     UU             UU           AA    AA     LL
                 MM     MM       MM     MM          AA     AA     NN    NN      NN     UU             UU          AA     AA     LL
                MM      MM      MM      MM         AA      AA     NN     NN     NN     UU             UU         AA      AA     LL
               MM       MM     MM       MM        AA       AA     NN      NN    NN     UU             UU        AA       AA     LL
              MM        MM    MM        MM       AAAAAAAAAAAA     NN       NN   NN     UU             UU       AAAAAAAAAAAA     LL
             MM         MM   MM         MM      AA         AA     NN        NN  NN     UU             UU      AA         AA     LL
            MM          MM  MM          MM     AA          AA     NN         NN NN     UU             UU     AA          AA     LL
           MM           MM MM           MM    AA           AA     NN          NNNN       UU         UU      AA           AA     LL
          MM            MMMM            MM   AA            AA     NN           NNN         UUUUUUUUU       AA            AA     LLLLLLLLLLLLLLLLL


                                                                         po

    po is a script that can automatically generate the inputfiles for VASP from a .cif file

    po -h -I -x -u -r
       -f [num] -p [pot]  -c [name] -i [dos] [stm] [sc]

    DEFAULT

    the default set is to generate the inputfiles with a relax calculation, and all atoms unfixed. the PBE2010 potcar is also used.

    !!CAUTION!!

    there must be incar, KPOINTS, vasp.script, potDir(with potcar directory in it, take /home/apps/pot/paw_pbe2010 for example) in the $HOME/res, or "po" can just generate POSCAR.

    INTRODUCTION

    -h --help, to print out the manual

    -I --INCAR initialization, to reset INCAR in $HOME/res

    -i [dos], [stm], [sc] --INCAR selection [calculation type], to generate different kinds of INCAR file

    -j --submit jobs, to submit jobs in the sub-directories

    -c [name], --checkjob [directory name], to check your recently finished jobs if the LOG file exists in the $HOME/

    -x --xyz, to generate .xyz file from the OUT.ANI

    -u [num*num*...], --LDA+U [U value], plus U value by "0*1*2*3*4..." based on the alphybet sequence of elements, the default J value is 0.5, the member of U values is at most 10.

    -r --remove, to remove useless files like CHG CHGCAR DOSCAR EIGENVAL IBZKPT energy  PCDAT vasprun.xml WAVECAR XDATCAR mpd.hosts errfile outfile REPORT fort.66, and it won't generate files.

    -f [num] --fix [coordinates number], to fix the atoms under the coordinates number.

    -p [pot] --potcar [POTCAR type], to choose which POTCAR will be used in the calculation in the future. make sure the directory of which one you choose exists in the $HOME/res/potDir


EOF
  ;;


  #it isn't possible to go here~
  ?)echo "internal error"
    ;;

esac
